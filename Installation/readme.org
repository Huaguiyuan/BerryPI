* Automated Installation
    - 1. Download BerryPI
    
    	- a. Download BerryPI off the Github repository via 'Download ZIP'
    	
    	- b. wget https://github.com/spichardo/BerryPI/archive/master.zip
    	
    	- c. cd ${WIENROOT}; git clone https://github.com/spichardo/BerryPI.git
    	
   - 2. Extract BerryPI out of ZIP compression (Ex: unzip master.zip, tar -xzvf master.zip)
   - 3. Rename the folder whatever you want and place the folder in any directory you want
   - 4. Execute the bash script init.sh in the BerryPI folder following all prompts until completion
   - 5. Source .bashrc file: $ source ~/.bashrc

 Optional:
   - 6. Verify that in config.py both DEFAULT_BIN_PATH and DEFAULT_PYTHON_PATH are not empty
   - 7. Verify that .bashrc has BerryPI related enviroment variables:
    -	export BERRYPI_PATH=/path/to/BerryPI
    -	export BERRYPI_PYTHON=/path/to/your/python2.7
    -	alias berrypi="${BERRYPI_PYTHON} ${BERRYPI_PATH}/berrypi"
    
* Manual Installation:
   - 1. Download BerryPI

    -	a. Download BerryPI off the Github repository via 'Download ZIP'
    
    -	b. wget https://github.com/spichardo/BerryPI/archive/master.zip
    
    -	c. cd ${WIENROOT}; git clone https://github.com/spichardo/BerryPI.git
    
   - 2. Extract BerryPI out of ZIP compression (Ex: unzip master.zip, tar -xzvf master.zip)
   - 3. Rename the folder whatever you want and place the folder in any directory you want
   - 4. Open config.py in a text editor
   - 5. Change DEFAULT_BIN_PATH to your BerryPI root directory (Ex: DEFAULT_BIN_PATH='~/share/BerryPI/') 
   - 6. Change DEFAULT_PYTHON_PATH to your Python 2.7 root directory (Ex: DEFAULT_PYTHON_PATH='/usr/bin/python2.7')
   - 7. open .bashrc in a text editor
   - 8. Add the line 'export BERRYPI_PATH= *Insert the same path you used in config.py for DEFAULT_BIN_PATH*'
   - 9. Add the line 'export BERRYPI_PYTHON= *Insert the same path you used in config.py for DEFAULT_PYTHON_PATH*'
   - 10.Add the line 'alias berrypi="${BERRYPI_PYTHON} ${BERRYPI_PATH}/berrypi"'


* Configuration
  - Configuration is done through the config.py file.
  - Currently, the paths for berrypi and for python are hardcoded within
    this file due to the nature of the current users environment. 
  - If accomodating multiple users we recommended having BerryPI in a shared enviroment(Ex: '~/share/BerryPI/')

  For further configuration options when running berrypi, run 
  berrypi -h
  to get a list of prefix options.

* Dependencies
  - WIEN2k (tested against 13.1 Release 25 June 2013)
  - WIEN2WANNIER (tested against v1.0-beta2)
  - Python (tested against 2.7.4)
  - NumPy (tested against 1.6.2)
  
* File Descriptions
** win2nnkp.py
   Generate the nearest neighbour list of k points
** mmn2pathphase.py
   Calculate the Berry phase for a particuler direction	
*  Calculation of the Berry Phase
   After getting pathphase(x,y,z), obtain each value is divided by PI Make
   sure that the values are within the [0, 2*PI] ex. -3.2 == 0.8pi
   normalizing.Then they are presented as Electronic phase/(2*pi)
** berrypi
   The main file to run. It automates the 'entire' berry process
** submoduleProcess.py
   File used for general shell interaction through python.
** parsing.py
   Includes functions for parsing certain wien2k and w2w files. The
   data being parsed from these files is used to calculate the
   information needed
** errorCheck.py
   Includes exception handling and background checks on files. Pretty
   barren right now.
** config.py
   *Important* this file is used to change how the
   berryPyParseAutomation works and needs to be pre-configured on
   first use
** calculations.py
   Includes the necessary classes to carry out the remaining
   calculations at the end of the automation run
** init.sh 
   Used to automate the install process.
   Can install Python 2.7.4 and Numpy 1.6.2.


